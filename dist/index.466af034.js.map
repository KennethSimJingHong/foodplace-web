{"mappings":"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","sources":["src/script.js"],"sourcesContent":["'use strict';\n\nconst form = document.querySelector(\".form\");\nconst containerPlaces = document.querySelector(\".places\");\nconst inputCategory = document.querySelector('.form__input--category');\nconst inputName = document.querySelector('.form__input--name');\nconst inputComment = document.querySelector('.form__input--comment');\nconst inputRate = document.querySelector('.form__input--rate');\nconst inputSort = document.querySelector(\".container__sort--option\");\n\nclass Place{\n    id = (Date.now() + '').slice(-10);\n\n    constructor(coords, name, comment, rate, category){\n        this.coords = coords;\n        this.name = name;\n        this.comment = comment;\n        this.rate = rate;\n        this.category = category;\n    }\n\n}\n\nclass App{\n    #map;\n    #mapEvent;\n    #markers = [];\n    #places = [\n        new Place([3.1321683, 101.6710431], \"myBurgerLab\", \"The beef patty is on the soft side, but not too mushy. The chips are real skin on potato chips that are cut not too thinly. Loving it!\", 4, \"western\")\n    ];\n\n    constructor(){\n        this._getPosition();\n        form.addEventListener(\"submit\", this._newPlace.bind(this));\n        containerPlaces.addEventListener(\"click\", this._moveToPopup.bind(this));\n        inputSort.addEventListener(\"change\", this._controlHandlerSorting.bind(this));\n    }\n\n    _getPosition(){\n        if(navigator.geolocation){\n            navigator.geolocation.getCurrentPosition(this._loadMap.bind(this), function(){});\n        }\n    }\n\n    _loadMap(position){\n        const {latitude} = position.coords;\n        const {longitude} = position.coords;\n        const coords = [latitude, longitude];\n\n        this.#map = L.map('map').setView(coords, 15);\n\n        L.tileLayer('https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png', {\n            attribution: '&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n        }).addTo(this.#map);\n    \n        this.#map.on(\"click\", this._showForm.bind(this));\n\n        this._getData();\n    }\n\n    _showForm(e){\n        this.#mapEvent = e;\n        inputName.focus();\n    }\n\n    _newPlace(e){\n        const isEmpty = (...inputs) => inputs.some(input => !input || input.length === 0);\n    \n        e.preventDefault();\n\n        // get data\n        const category = inputCategory.value;\n        const name = inputName.value;\n        const comment = inputComment.value;\n        const rate = +inputRate.value;\n        if(!this.#mapEvent) return alert(\"Be sure you have select a place!\");\n        const {lat, lng} = this.#mapEvent.latlng;\n        \n        // check if it is valid\n        if(isEmpty(name, comment)) return alert(\"Input should not be empty!\");\n\n        // valid then create place object\n        const place = new Place([lat,lng], name, comment, rate, category);\n        this.#places.push(place);\n\n        // render place as marker\n        this._renderPlaceMarker(place);\n        \n        // render place on list\n        this._renderPlace(place);\n\n        // clear input\n        this._hideForm();\n    }\n\n    _renderPlaceMarker(place){\n        const marker = L.marker(place.coords).addTo(this.#map)\n        .bindPopup(L.popup({maxWidth:250, minWidth: 100}))\n        .setPopupContent(`${place.name}`)\n        .openPopup();\n\n        this.#markers.push(marker);\n    }\n\n    _renderPlace(place){\n        const placeRating = num => {\n            let string = \"\";\n            for(let x = 0; x < num; x++){\n                string += '⭐';\n            }\n            return string;\n        }\n\n        const markup = `\n            <li class=\"place\" data-id=\"${place.id}\">\n                <h2 class=\"place__title\">${place.name}</h2>\n                <div class=\"place__details\">\n                    <div class=\"place__details--rating\">${placeRating(place.rate)}</div>\n                    <div class=\"place__details--category\">${place.category}</div>\n                    <div class=\"place__details--comment\">${place.comment}</div>\n                </div>\n                <button class=\"place__btn--delete\" onclick=\"app._deleteData(this)\">Remove</button>\n            </li>\n        `;\n\n        containerPlaces.insertAdjacentHTML(\"afterbegin\", markup);\n    }\n\n    _hideForm(){\n        inputName.value = inputComment.value = \"\";\n        inputRate.value = 1;\n        inputCategory.selectedIndex = 0;\n\n    }\n\n    _moveToPopup(e){\n        const placeEl = e.target.closest(\".place\");\n        if(!placeEl) return;\n        const place = this.#places.find(pl => pl.id === placeEl.dataset.id);\n        if(!place) return;\n        this.#map.setView(place.coords, 15, {\n            animate:true,\n            pan:{\n                duration:1\n            }\n        });\n    }\n\n    _getData(){\n        this.#places.forEach(place => {\n            this._renderPlaceMarker(place);\n            this._renderPlace(place);\n        })\n    }\n\n    _deleteData(e){\n        const placeEl = e.parentElement.closest(\".place\");\n        if(!placeEl) return;\n        \n        // get removed data\n        const removedPlace = this.#places.filter(place => place.id === placeEl.dataset.id);\n\n        // remove place from array\n        this.#places = this.#places.filter(place => place.id !== placeEl.dataset.id);\n\n        // remove marker\n        const mark = this.#markers.find(marker => marker._latlng.lat === removedPlace[0].coords[0] && marker._latlng.lng === removedPlace[0].coords[1]);\n        this.#map.removeLayer(mark);\n\n        // remove place from view list\n        placeEl.remove();\n    }\n\n    _controlHandlerSorting(e){\n        const value = e.target.value;\n        containerPlaces.innerHTML = \"\";\n\n        if(value === \"default\")\n        this.#places.forEach(place => {\n            this._renderPlace(place);\n        })\n\n        if(value === \"rating\"){\n            const unsortedArray = [...this.#places];\n            unsortedArray.sort((a,b) => a.rate - b.rate).forEach(place => {\n                this._renderPlace(place);\n            })\n        }\n        \n    }\n    \n}\n\nconst app = new App();\n\n\n\n\n\n\n"],"names":["form","document","querySelector","containerPlaces","inputCategory","inputName","inputComment","inputRate","inputSort","Place","id","Date","now","slice","coords","name","comment","rate","category","this","App","map","mapEvent","markers","places","_getPosition","addEventListener","_newPlace","bind","_moveToPopup","_controlHandlerSorting","navigator","geolocation","getCurrentPosition","_loadMap","position","latitude","longitude","L","setView","tileLayer","attribution","addTo","on","_showForm","_getData","e","focus","e1","preventDefault","value","alert","lat","lng","latlng","inputs","some","input","length","isEmpty","place","push","_renderPlaceMarker","_renderPlace","_hideForm","place2","marker","bindPopup","popup","maxWidth","minWidth","setPopupContent","openPopup","place1","markup","num","string","x","placeRating","insertAdjacentHTML","selectedIndex","e2","placeEl","target","closest","find","pl","dataset","animate","pan","duration","e3","removedPlace","filter","mark","_latlng","removeLayer","e4","innerHTML","forEach"],"version":3,"file":"index.466af034.js.map"}